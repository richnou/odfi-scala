#!/bin/bash
script=${1}
shift 1

#echo "In scala script header $$"
#echo "Script to execute: ${script}"

# Try to find a preload part
SCALA_CP_START=`awk '/^_SCALA_PRELOAD_/ {print NR + 1; exit 0; }' $script`
SCALA_CP_END=`awk '/^_EOF_SCALA_PRELOAD_/ {print NR - 1; exit 0; }' $script`
SCALA_PRELOAD=""
if [[ "${SCALA_CP_START}" != "" && "${SCALA_CP_END}" != "" ]]
then
	SCALA_PRELOAD=`sed -n ${SCALA_CP_START},${SCALA_CP_END}p $script`	
	echo "${SCALA_PRELOAD}" > /tmp/scalacp.preload.$$
	#echo "${SCALA_PRELOAD}"

	res=`cd $(dirname ${script}) && SCRIPT_LOCATION=$(cd $(dirname ${script}) && pwd) bash /tmp/scalacp.preload.$$ "$@"`
	rm -f /tmp/scalacp.preload.$$
	
	## Every result line should contain a path to a folder or a jar
	#echo "PRELOADRES: $res"
	for pathComponent in ${res}
	do
			#echo "CPELT: ${pathComponent}"
			USER_CLASSPATH="${pathComponent}:${USER_CLASSPATH}:"
	done

fi

if [[ -n $SCALA_PRELOAD ]]
then
	

	## Extract normal script part
	sed `let res=${SCALA_CP_START}-1 && echo $res`,`let res=${SCALA_CP_END}+1 && echo $res`d $script | tail -n +2 > /tmp/scalacp.$$

	#echo "Script to execute: `cat /tmp/scalacp.$$`"
	#echo "User CP: ${USER_CLASSPATH}"
	#echo "---"
	#echo "---"

	#exec scala -i /tmp/scalacp.preload.$$ -Dscript.location=$(dirname ${script}) /tmp/scalacp.$$ "$@"

	exec scala -classpath "${USER_CLASSPATH}" -Dscript.location=$(dirname ${script}) /tmp/scalacp.$$ "$@"
	rm -f /tmp/scalacp.$$
	
else
	
	exec scala -classpath "${USER_CLASSPATH}" -Dscript.location=$(dirname ${script}) ${script} "$@"
	
fi




!#
